解析xml文件有两种方式dom和sax方式.
DOM和SAX都只是接口,是解析xml的两种标准.
(1)使用DOM要求解析器把整个XML文档装载到一个Document对象中。Document对象包含文档元素，即根元素，根元素包含N多个子元素…
　　一个XML文档解析后对应一个Document对象，这说明使用DOM解析XML文档方便使用，因为元素与元素之间还保存着结构关系。
　　优点：使用DOM，XML文档的结构在内存中依然清晰。元素与元素之间的关系保留了下来！
　　缺点：如果XML文档过大，那么把整个XML文档装载进内存，可能会出现内存溢出的现象
(2)　　DOM会一行一行的读取XML文档，最终会把XML文档所有数据存放到Document对象中。SAX也是一行一行的读取XML文档，但是当XML文档读取结束后，SAX不会保存任何数据，同时整个解析XML文档的工作也就结束了。
　　但是，SAX在读取一行XML文档数据后，就会给感兴趣的用户一个通知！例如当SAX读取到一个元素的开始时，会通知用户当前解析到一个元素的开始标签。而用户可以在整个解析的过程中完成自己的业务逻辑，当SAX解析结束，不会保存任何XML文档的数据。
　　优点：使用SAX，不会占用大量内存来保存XML文档数据，效率也高。
　　缺点：当解析到一个元素时，上一个元素的信息已经丢弃，也就是说没有保存元素与元素之间的结构关系，这也大大限制了SAX的使用范围。如果只是想查询XML文档中的数据，那么使用SAX是最佳选择！


/*
     *使用dom4j支持xpath的操作的几种主要形式
   　　       第一种形式
        　　　　    /AAA/DDD/BBB： 表示一层一层的，AAA下面 DDD下面的BBB
    　       第二种形式
       　　　　     //BBB： 表示和这个名称相同，表示只要名称是BBB，都得到
             第三种形式
        　　　        　/*: 所有元素
             第四种形式
       　　　　     BBB[1]：　表示第一个BBB元素
        　  　　       BBB[last()]：表示最后一个BBB元素
             第五种形式
        　　　　    //BBB[@id]： 表示只要BBB元素上面有id属性，都得到
             第六种形式
        　　　　     //BBB[@id='b1'] 表示元素名称是BBB,在BBB上面有id属性，并且id的属性值是b1
     */
